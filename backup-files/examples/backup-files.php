<!-- Code example for php using Laravel framework
This code was generated by chatGPT from pseudo-code
If you spot an issue, feel free to create a PR to fix it -->

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;

class SlackController extends Controller
{
    public function backupFiles(Request $request)
    {
        $event = $request->input('event', []);
        $eventType = $request->input('type');

        // if the event is a new thread message written by Tiny Chat bot and it contains a Tiny Chat file link
        if ($eventType == 'message' && isset($event['thread_ts']) && isset($event['bot_id']) && strpos($event['text'], 'https://files.tiny-chat.com') !== false) {
            // retrieve the link from the text
            $pattern = '/https:\/\/files\.tiny-chat\.com\S+\|/';
            preg_match($pattern, $event['text'], $matches);
            if ($matches) {
                $fileLink = $matches[0];
                echo "Found a Tiny Chat file link: $fileLink\n";
                $fileContent = $this->downloadFile($fileLink);
                if ($fileContent) {
                    $newFileLink = null;
                    // TODO: upload the file to your own storage and returns the new file link
                    // $newFileLink = $this->uploadToStorage($fileContent);
                    $newText = preg_replace($pattern, $newFileLink, $event['text']);
                    $this->rewriteMessage($event, $newText);
                }
            }
        }
    }

    private function downloadFile($fileLink)
    {
        echo "Downloading file: $fileLink\n";
        $response = Http::get($fileLink);
        if ($response->successful()) {
            return $response->body();
        } else {
            echo "Error downloading file: $fileLink\n";
            return null;
        }
    }

    private function rewriteMessage($event, $newText)
    {
        // Initialize Slack WebClient
        // TODO: configure SLACK_API_TOKEN with your slack app token
        $slackToken = env('SLACK_API_TOKEN');
        $client = new \GuzzleHttp\Client(['headers' => ['Authorization' => 'Bearer ' . $slackToken]]);

        $channelId = $event['channel'];
        $messageTs = $event['ts'];
        try {
            // Call the chat.update method to edit the message
            $response = $client->post('https://slack.com/api/chat.update', [
                'json' => [
                    'channel' => $channelId,
                    'ts' => $messageTs,
                    'text' => $newText
                ]
            ]);

            $responseData = json_decode($response->getBody(), true);
            if ($responseData['ok']) {
                echo "Message updated successfully!\n";
            } else {
                echo "Failed to update message: {$responseData['error']}\n";
            }
        } catch (\GuzzleHttp\Exception\RequestException $e) {
            echo "Error updating message: " . json_decode($e->getResponse()->getBody(), true)['error'] . "\n";
        }
    }
}